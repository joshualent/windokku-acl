#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x

# service-post-create: executed after `<type>:create <service>`
SERVICE_TYPE="$1"
SERVICE="$2"
[[ -z "$SERVICE_TYPE" || -z "$SERVICE" ]] && exit 0

# Resolve user from capture file or fallback to SSH_NAME
RUN_BASE="/var/run/dokku-acl-auto"
CREATOR_FILE="$RUN_BASE/services/$SERVICE_TYPE/$SERVICE"
user=""
if [[ -s "$CREATOR_FILE" ]]; then
  user="$(cat "$CREATOR_FILE" || true)"
  rm -f "$CREATOR_FILE" || true
fi
[[ -z "$user" && -n "$SSH_NAME" ]] && user="$SSH_NAME"

if [[ -z "$user" ]]; then
  echo "WARN: no user resolved for ${SERVICE_TYPE} service '$SERVICE'; skipped acl:add-service" >&2
  exit 0
fi

# Try to run as on-host admin: scrub ssh env and set DOKKU_ON_HOST
if env -u SSH_NAME -u SSH_USER -u DOKKU_SSH_USER DOKKU_ON_HOST=1 dokku acl:add-service "$SERVICE_TYPE" "$SERVICE" "$user" 2>/dev/null; then
  exit 0
fi

# Fallback: call the subcommand directly if found
bases=("$PLUGIN_ENABLED_PATH" "$PLUGIN_AVAILABLE_PATH" "/var/lib/dokku/plugins/enabled" "/var/lib/dokku/plugins/available")
names=("acl" "dokku-acl")
for base in "${bases[@]}"; do
  for name in "${names[@]}"; do
    candidate="$base/$name/subcommands/add-service"
    if [[ -x "$candidate" ]]; then
      if env -u SSH_NAME -u SSH_USER -u DOKKU_SSH_USER DOKKU_ON_HOST=1 "$candidate" "$SERVICE_TYPE" "$SERVICE" "$user"; then
        exit 0
      fi
    fi
  done
done

# Last resort: try with an admin NAME inferred from authorized_keys
admin_name=""
if [[ -r "/home/dokku/.ssh/authorized_keys" ]]; then
  admin_name=$(grep -m1 -o 'NAME=[^ ]*' /home/dokku/.ssh/authorized_keys | head -n1 | cut -d= -f2 || true)
fi
if [[ -n "$admin_name" ]]; then
  if env SSH_NAME="$admin_name" SSH_USER="root" DOKKU_ON_HOST=1 dokku acl:add-service "$SERVICE_TYPE" "$SERVICE" "$user" 2>/dev/null; then
    exit 0
  fi
fi

echo "WARN: failed to add '$user' to ACL for ${SERVICE_TYPE} service '$SERVICE'" >&2
exit 0
